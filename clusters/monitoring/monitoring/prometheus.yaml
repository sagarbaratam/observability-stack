apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitoring
spec:
  interval: 1h
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "48.1.1"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      interval: 1h
  values:
    rbac:
      create: true
    podSecurityPolicy:
      enabled: false
    prometheus:
      enabled: true
      service:
        type: NodePort
        nodePort: 30000
      prometheusSpec:
        replicas: 1
        retention: 15d
        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
          fsGroup: 65534
          runAsNonRoot: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 8Gi
        podMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        resources: {}
        containers:
          - name: configmap-reload
            image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.0
            imagePullPolicy: IfNotPresent
            args:
              - --web.enable-lifecycle
    alertmanager:
      enabled: true
      service:
        type: NodePort
        nodePort: 30003
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 2Gi
        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
          fsGroup: 65534
          runAsNonRoot: true
    grafana:
      enabled: false
    kube-state-metrics:
      enabled: true
    prometheus-node-exporter:
      enabled: true
      rbac:
        pspEnabled: false
      containerSecurityContext:
        allowPrivilegeEscalation: false
    prometheus-pushgateway:
      enabled: true
      service:
        annotations:
          prometheus.io/probe: pushgateway